require 'sinatra'
require 'redis-namespace'
require File.join(File.dirname(__FILE__), 'helpers')
require File.join(File.dirname(__FILE__), 'brief')

require File.join(File.dirname(__FILE__), '../configuration')
$conf = Shortener::Configuration.new

require File.join(File.dirname(__FILE__), 'api', 'v1')

require File.join(File.dirname(__FILE__), 'views') if $conf.views

if $conf.authenticate?
  require 'warden'
  require File.join(File.dirname(__FILE__), 'warden')
  require File.join(File.dirname(__FILE__), 'user')
  require File.join(File.dirname(__FILE__), 'auth')
  use Rack::Session::Cookie
  use Warden::Manager do |manager|
    manager.default_strategies :password
    manager.failure_app = Shortener::Server::Auth
  end
end

uri = $conf.redistogo_url
_redis = Redis.new(:host => uri.host, :port => uri.port, :password => uri.password)
$redis = Redis::Namespace.new(:shortener, redis: _redis)

class Shortener::Server::Instance < Sinatra::Base

  use Shortener::Server::Auth if $conf.authenticate?
  use Shortener::Server::Views if $conf.views
  use Shortener::Server::Api::V1

  before do
    if $conf.auth_route?(env['REQUEST_PATH']) && !env['warden'].authenticated?
      session['REDIRECT_TO'] = env['REQUEST_PATH']
      redirect('/u/login')
    end
  end if $conf.authenticate?

end

run Shortener::Server::Instance.new
